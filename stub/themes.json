[
  {
    "id": 1,
    "name": "HTML",
    "logo": "http://blog.netapsys.fr/wp-content/uploads/2011/05/HTML5_Logo_2562.png",
    "referent": {
      "firstName": "Alexandre",
      "lastName": "Escudero",
      "avatar": "https://sqli468.sharepoint.com/sites/collaboratifs/Toulouse%20Comit%C3%A9%20Technique/SiteAssets/team-members/Alexandre.png"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Quelle est l'erreur dans le code suivant",
        "code": "<ul>\n\t<il></il>\n\t<il></il>\n\t<il></il>\n</ul>",
        "responses": [
          {
            "title": "il faut numéroter chaque objet de la liste"
          },
          {
            "title": "il ny a pas d'erreur"
          },
          {
            "title": "la balise <ul> n'a pas besoin d'être fermée"
          },
          {
            "title": "la balise <il> n'existe pas",
            "isTrue": true
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Quels sont les deux attributs obligatoires de la balise",
        "code": "<img/>",
        "responses": [
          {
            "code": "<img title=\"\" href=\"\"/>"
          },
          {
            "code": "<img src=\"\" recto=\"\"/>"
          },
          {
            "code": "<img href=\"\" alt=\"\"/>"
          },
          {
            "code": "<img alt=\"\" src=\"\"/>",
            "isTrue": true
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "Quel doit être le type d’un bouton d’envoi d’un formulaire HTML5",
        "code": "<button></button>",
        "responses": [
          {
            "code": "<button type=\"post\"></button>"
          },
          {
            "code": "<button type=\"go\"></button>"
          },
          {
            "code": "<button type=\"send\"></button>"
          },
          {
            "code": "<button type=\"submit\"></button>",
            "isTrue": true
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Quelle(s) proposition(s) est/sont vraie(s) ",
        "code": "<form>\n\t<label>User Name</label>\n\t<textarea name=\"username\"/>\n</form>",
        "responses": [
          {
            "title": "La balise « textarea » n’existe pas"
          },
          {
            "title": "La balise « textarea » doit s’ouvrir et se fermer comme cela :",
            "code": "<textarea name=\"username\"></textarea>",
            "isTrue": true
          },
          {
            "title": "Il est obligatoire d’ajouter de « id » aux « label » et « textarea »"
          },
          {
            "title": "Il manque le type à la balise « textarea »"
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Quelle(s) proposition(s) est/sont vraie(s) ",
        "code": "<form>\n\t<label for=\"username\">User Name</label>\n\t<input id=\"username\" type=\"text\"/>\n</form>",
        "responses": [
          {
            "title": "Le label affiché sera  « username »"
          },
          {
            "title": "Le label est l’input sont techniquement liés grâce à for/id",
            "isTrue": true
          },
          {
            "title": "Lorsque l’utilisateur va cliquer sur le label, le focus sera dans l’input",
            "isTrue": true
          },
          {
            "title": "La balise « input » doit s’ouvrir et ce fermer comme cela :",
            "code": "<input id=\"username\" type=\"text\"></input>"
          }
        ]
      },
      {
        "id": 6,
        "level": "Débutant",
        "title": "Parmi les méthodes suivantes, laquelle appartient à l'API localStorage ",
        "code": "",
        "responses": [
          {
            "code": "addItem(key, value)"
          },
          {
            "code": "setItem(key, value)",
            "isTrue": true
          },
          {
            "code": "retrieveItem(key)"
          },
          {
            "code": "deleteItem(key)"
          },
          {
            "code": "removeAll()"
          }
        ]
      },
      {
        "id": 7,
        "level": "Intermédiaire",
        "title": "Quelle est la forme correcte de la balise doctype",
        "code": "",
        "responses": [
          {
            "code": "<!DOCTYPE HTML5>"
          },
          {
            "code": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 5.0//EN\" \"http://www.w3.org/TR/html5/strict.dtd\">"
          },
          {
            "code": "<!DOCTYPE html>",
            "isTrue": true
          },
          {
            "code": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML5.0 Strict//EN\">"
          }
        ]
      },
      {
        "id": 8,
        "level": "Intermédiaire",
        "title": "Dans l’index.html pour des questions de performance, Il est préférable d’importer les scripts javascript",
        "code": "",
        "responses": [
          {
            "title": "dans l’élément :",
            "code": "<head></head>"
          },
          {
            "title": "au début de l’élément",
            "code": "<body></body>"
          },
          {
            "title": "à la fin de l’élément",
            "code": "<body></body>",
            "isTrue": true
          }
        ]
      },
      {
        "id": 9,
        "level": "Expert",
        "title": "Quelle(s) proposition(s) est/sont vraie(s)",
        "code": "",
        "responses": [
          {
            "title": "L'ordre des attributs d’un élément HTML a une incidence sur son rendu"
          },
          {
            "title": "La simple présence d’un attribut booléen dans un élément HTML5 implique qu’il vaut true ; par exemple pour l’attribut disabled : ",
            "code": "<input id=\"username\" type=\"text\" disabled></input>",
            "isTrue": true
          },
          {
            "title": "Il est recommandé de renseigner l’attribut name dans un élément <input/> présent dans un formulaire <form> ; par exemple : ",
            "code": "<form name=\"userForm\">\n\t<input type=\"text\" name=\"firstName\" />\n</form>",
            "isTrue": true
          }
        ]
      },
      {
        "id": 10,
        "level": "Expert",
        "title": "Dans la mesure du possible, il faut spécifier le style de l’application dans",
        "code": "",
        "responses": [
          {
            "title": "les templates HTML"
          },
          {
            "title": "les feuilles de style CSS",
            "isTrue": true
          },
          {
            "title": "les scripts javascript"
          }
        ]
      }
    ]
  },
  {
    "id": 2,
    "name": "JavaScript",
    "logo": "http://www.brandsoftheworld.com/sites/default/files/styles/logo-thumbnail/public/082014/js1_0.png?itok=BqOjTfHU",
    "referent": {
      "firstName": "Robin",
      "lastName": "Coma Delperier",
      "avatar": "https://sqli468.sharepoint.com/sites/collaboratifs/Toulouse%20Comit%C3%A9%20Technique/SiteAssets/team-members/Robin.png"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Quel sont les types existant en JavaScript",
        "responses": [
          {
            "title": "Number",
            "isTrue": true
          },
          {
            "title": "String",
            "isTrue": true
          },
          {
            "title": "Boolean",
            "isTrue": true
          },
          {
            "title": "Object",
            "isTrue": true
          },
          {
            "title": "Null"
          },
          {
            "title": "Integer"
          },
          {
            "title": "Double"
          },
          {
            "title": "Array",
            "isTrue": true
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Quelle est la valeur de result2 suite à cette instruction",
        "code": "var result2 = '1' + 2 + 3;",
        "responses": [
          {
            "title": "'15'"
          },
          {
            "title": "6"
          },
          {
            "title": "'123'",
            "isTrue": true
          },
          {
            "title": "15"
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "Que renvoie sur la sortie de console le code suivant",
        "code": "(function() {\n\tvar a = b = 5;\n})();\nconsole.log(b);",
        "responses": [
          {
            "title": "undefined"
          },
          {
            "title": "null"
          },
          {
            "title": "5",
            "isTrue": true
          },
          {
            "title": "a"
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Quelle est la valeur de result4 suite à cette instruction",
        "code": "var result4 = false == 'false';",
        "responses": [
          {
            "title": "true"
          },
          {
            "title": "false",
            "isTrue": true
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Il est possible de remplacer la ligne 1 par la ligne 2 seulement si value5 n'est pas",
        "code": "if (value5 !== null && value5!== undefined){}\nif(value5){}",
        "responses": [
          {
            "title": "0",
            "isTrue": true
          },
          {
            "title": "false",
            "isTrue": true
          },
          {
            "title": "''",
            "isTrue": true
          },
          {
            "title": "'0'"
          }
        ]
      },
      {
        "id": 6,
        "level": "Débutant",
        "title": "Quelle est la valeur de result6 suite à cette instruction",
        "code": "var result6 = null || 'Hello';",
        "responses": [
          {
            "title": "null"
          },
          {
            "title": "'Hello'",
            "isTrue": true
          }
        ]
      },
      {
        "id": 7,
        "level": "Intermédiaire",
        "title": "Quelle est la valeur de result7 suite à cette instruction",
        "code": "var result7 = null && 'Hello';",
        "responses": [
          {
            "title": "null",
            "isTrue": true
          },
          {
            "title": "'Hello'"
          }
        ]
      },
      {
        "id": 8,
        "level": "Intermédiaire",
        "title": "Que renvoie sur la sortie de console le code suivant",
        "code": "var function8 = function(){\n\tvar i = 0;\n\tvar iterator = function(){\n\t\ti++;\n\t};\n\titerator();\n\titerator();\n\treturn i;\n};\nconsole.log(function8());",
        "responses": [
          {
            "title": "2",
            "isTrue": true
          },
          {
            "title": "0"
          }
        ]
      },
      {
        "id": 9,
        "level": "Expert",
        "title": "Que renvoie sur la sortie de console le code suivant",
        "code": "var function8 = function(){\n\tvar i = 0;\n\tvar iterator = function(){\n\t\tvar i = 0;\n\t\ti++;\n\t};\n\titerator();\n\titerator();\n\treturn i;\n};\nconsole.log(function8());",
        "responses": [
          {
            "title": "2"
          },
          {
            "title": "0",
            "isTrue": true
          }
        ]
      },
      {
        "id": 10,
        "level": "Expert",
        "title": "Dans le  « langage » des sélecteurs, que signifie",
        "code": ".toto",
        "responses": [
          {
            "title": "les éléments ayant l’attribut « class » toto",
            "isTrue": true
          },
          {
            "title": "l’élément ayant l’attribut « id »  toto"
          },
          {
            "title": "les éléments ayant l’attribut « name »  toto"
          },
          {
            "title": "les éléments ayant l’attribut « toto »"
          }
        ]
      },
      {
        "id": 11,
        "level": "Expert",
        "title": "Lors d’une requête Ajax, quelle est la plage de valeur d’une requête qui a aboutie en success",
        "responses": [
          {
            "title": "<= 400"
          },
          {
            "title": "0 - 200"
          },
          {
            "title": "200 - 399",
            "isTrue": true
          },
          {
            "title": ">= 400"
          }
        ]
      },
      {
        "id": 12,
        "level": "Expert",
        "title": "Quelle est la valeur de result12 suite à cette instruction ",
        "code": "var result12 = [2,8,6,5,78,4,3].some(function(element){\n\treturn element < 5;\n});",
        "responses": [
          {
            "code": "[2,4,3]"
          },
          {
            "code": "[8,6,78]"
          },
          {
            "code": "true",
            "isTrue": true
          },
          {
            "code": "false"
          }
        ]
      },
      {
        "id": 13,
        "level": "Expert",
        "title": "Quelle définition du module ne provoque pas d’erreur lors de son invocation",
        "code": "module13.init();",
        "responses": [
          {
            "code": "var module13 = (function () {\n\treturn {\n\t\tinit: function () {\n\t\t\tconsole.log('Module 1 initialization');\n\t\t}\n\t}\n})();",
            "isTrue": true
          },
          {
            "code": "var module13 = (function () {\n\treturn {\n\t\tinit: function () {\n\t\t\tconsole.log('Module 1 initialization');\n\t\t}\n\t}\n});"
          }
        ]
      },
      {
        "id": 14,
        "level": "Expert",
        "title": "Lesquelles de ces instructions ne provoquent pas d’erreur en supposant qu’elles sont exécutées indépendamment les unes des autres et à la suite du code suivant",
        "code": "var module14 = (function () {\n\tvar service3 = function () {\n\t\tconsole.log('Service')\n\t};\n\treturn {\n\t\tservice1: service3,\n\t\tservice2: function () {\n\t\t\treturn service3();\n\t\t}\n\t}\n})();",
        "responses": [
          {
            "title": "module14.service1();",
            "isTrue": true
          },
          {
            "title": "module14.service2();",
            "isTrue": true
          },
          {
            "title": "module14.service3();"
          }
        ]
      },
      {
        "id": 15,
        "level": "Expert",
        "title": "Lesquelles de ces instructions retourne \"Harry Potter\" en supposant qu’elles sont exécutées indépendamment les unes des autres et à la suite du code suivant",
        "code": "function Book(title) {\n\tvar self = this;\n\tvar toString2 = function () {\n\t\treturn this.title;\n\t};\n\tvar toString4 = function () {\n\t\treturn self.title;\n\t};\n\tvar toString5 = function (context) {\n\t\treturn context.title;\n\t};\n\tthis.title = title;\n\tthis.toString1 = function () {\n\t\treturn this.title;\n\t};\n\tthis.toString2 = toString2;\n\tthis.toString3 = function () {\n\t\treturn toString2();\n\t};\n\tthis.toString4 = function () {\n\t\treturn toString4();\n\t};\n\tthis.toString5 = function () {\n\t\treturn toString5(this);\n\t};\n}\nBook.prototype.toString6 = function () {\n\treturn this.title;\n};\nvar book1 = new Book('Harry Potter');",
        "responses": [
          {
            "title": "book1.toString1();",
            "isTrue": true
          },
          {
            "title": "book1.toString2();",
            "isTrue": true
          },
          {
            "title": "book1.toString3();"
          },
          {
            "title": "book1.toString4();",
            "isTrue": true
          },
          {
            "title": "book1.toString5();",
            "isTrue": true
          },
          {
            "title": "book1.toString6();",
            "isTrue": true
          }
        ]
      }
    ]
  },
  {
    "id": 3,
    "name": "AngularJS",
    "logo": "http://blog.netapsys.fr/wp-content/uploads/2015/01/angularjs-logo.png.pagespeed.ce_.2SfPGmgT_b1.png",
    "referent": {
      "firstName": "Robin",
      "lastName": "Coma Delperier",
      "avatar": "https://sqli468.sharepoint.com/sites/collaboratifs/Toulouse%20Comit%C3%A9%20Technique/SiteAssets/team-members/Robin.png"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Qui est à l’initiative du framework AngularJS",
        "responses": [
          {
            "title": "Facebook"
          },
          {
            "title": "Twitter"
          },
          {
            "title": "Yahoo"
          },
          {
            "title": "Google",
            "isTrue": true
          },
          {
            "title": "Microsoft"
          },
          {
            "title": "W3C"
          },
          {
            "title": "Apache"
          },
          {
            "title": "Mozilla"
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Quelles sont les directives inclus dans le module NG (Angular core)",
        "responses": [
          {
            "title": "ng-repeat",
            "isTrue": true
          },
          {
            "title": "ng-messages"
          },
          {
            "title": "ng-if",
            "isTrue": true
          },
          {
            "title": "ng-cloak",
            "isTrue": true
          },
          {
            "title": "ng-else"
          },
          {
            "title": "ng-show",
            "isTrue": true
          },
          {
            "title": "ng-click",
            "isTrue": true
          },
          {
            "title": "ng-dbclick",
            "isTrue": true
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "Quelles sont les méthodes HTTP correctes",
        "responses": [
          {
            "title": "HEAD",
            "isTrue": true
          },
          {
            "title": "POST",
            "isTrue": true
          },
          {
            "title": "GET",
            "isTrue": true
          },
          {
            "title": "DELETE",
            "isTrue": true
          },
          {
            "title": "REMOVE"
          },
          {
            "title": "PUT",
            "isTrue": true
          },
          {
            "title": "SAVE"
          },
          {
            "title": "UPDATE"
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Qu’est-ce qu’il ne faut pas faire dans le code d’un contrôleur AngularJS",
        "responses": [
          {
            "title": "Manipuler le DOM",
            "isTrue": true
          },
          {
            "title": "Ecrire des algorithmes complexes",
            "isTrue": true
          },
          {
            "title": "Gérer le cycle de vie de plusieurs composants",
            "isTrue": true
          },
          {
            "title": "Initialiser la vues"
          },
          {
            "title": "Insérer des données dans le $scope"
          },
          {
            "title": "Ecrire du code transverse",
            "isTrue": true
          },
          {
            "title": "Filtrer / Transformer les entrées (données)",
            "isTrue": true
          },
          {
            "title": "Filtrer / Transformer les sorties (données)",
            "isTrue": true
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Qu’est-ce que je peux utiliser comme règle de gestion dans un formulaire (HTML5 + AngularJS)",
        "responses": [
          {
            "title": "mandatory"
          },
          {
            "title": "email",
            "isTrue": true
          },
          {
            "title": "url",
            "isTrue": true
          },
          {
            "title": "ng-minlength",
            "isTrue": true
          },
          {
            "title": "ng-maxlength",
            "isTrue": true
          },
          {
            "title": "ng-pattern",
            "isTrue": true
          },
          {
            "title": "ng-telephone"
          },
          {
            "title": "ng-inferior"
          }
        ]
      },
      {
        "id": 6,
        "level": "Débutant",
        "title": "Lors de l’utilisation d’un ng-model, à quoi le contrôleur du ng-form nous donne accès",
        "responses": [
          {
            "title": "$clean"
          },
          {
            "title": "$fill"
          },
          {
            "title": "$invalid",
            "isTrue": true
          },
          {
            "title": "$valid",
            "isTrue": true
          },
          {
            "title": "$obsolete"
          },
          {
            "title": "$error",
            "isTrue": true
          },
          {
            "title": "$dirty",
            "isTrue": true
          },
          {
            "title": "$pristine",
            "isTrue": true
          }
        ]
      },
      {
        "id": 7,
        "level": "Intermédiaire",
        "title": "Quelles sont les méthodes accessibles dans le service $http",
        "responses": [
          {
            "title": "$http.get",
            "isTrue": true
          },
          {
            "title": "$http.post",
            "isTrue": true
          },
          {
            "title": "$http.put",
            "isTrue": true
          },
          {
            "title": "$http.delete",
            "isTrue": true
          },
          {
            "title": "$http.remove"
          },
          {
            "title": "$http.save"
          },
          {
            "title": "$http.query"
          },
          {
            "title": "$http.findAll"
          }
        ]
      },
      {
        "id": 8,
        "level": "Intermédiaire",
        "title": "Quelles sont les méthodes accessibles dans la ressource User si",
        "code": "var User = $resource('http://my.api.com/user');",
        "responses": [
          {
            "title": "User.get",
            "isTrue": true
          },
          {
            "title": "User.post"
          },
          {
            "title": "User.put"
          },
          {
            "title": "User.delete",
            "isTrue": true
          },
          {
            "title": "User.remove",
            "isTrue": true
          },
          {
            "title": "User.save",
            "isTrue": true
          },
          {
            "title": "User.query",
            "isTrue": true
          },
          {
            "title": "User.findAll"
          }
        ]
      },
      {
        "id": 9,
        "level": "Expert",
        "title": "Quelles sont les implémentations dans AngularJS des « Services »",
        "responses": [
          {
            "title": "component"
          },
          {
            "title": "init"
          },
          {
            "title": "value",
            "isTrue": true
          },
          {
            "title": "factory",
            "isTrue": true
          },
          {
            "title": "service",
            "isTrue": true
          },
          {
            "title": "provider",
            "isTrue": true
          },
          {
            "title": "constant",
            "isTrue": true
          },
          {
            "title": "run"
          }
        ]
      },
      {
        "id": 10,
        "level": "Expert",
        "title": "Quels sont les « Services » qui sont configurables dans la phase de configuration d’AngularJS ",
        "responses": [
          {
            "title": "component"
          },
          {
            "title": "init"
          },
          {
            "title": "value"
          },
          {
            "title": "factory"
          },
          {
            "title": "service"
          },
          {
            "title": "provider",
            "isTrue": true
          },
          {
            "title": "constant",
            "isTrue": true
          },
          {
            "title": "run"
          }
        ]
      },
      {
        "id": 11,
        "level": "Expert",
        "title": "Quel sont les attributs corrects dans la définition d’une directive",
        "responses": [
          {
            "title": "link",
            "isTrue": true
          },
          {
            "title": "attributes"
          },
          {
            "title": "templateUrl",
            "isTrue": true
          },
          {
            "title": "scope",
            "isTrue": true
          },
          {
            "title": "element"
          },
          {
            "title": "controller",
            "isTrue": true
          },
          {
            "title": "target"
          },
          {
            "title": "import"
          }
        ]
      },
      {
        "id": 12,
        "level": "Expert",
        "title": "Comment puis-je activer la stratégie de double data-binding sur une variable entre la directive et le scope de la vue qui l’utilise",
        "responses": [
          {
            "title": "nomDeLattribut : '@'"
          },
          {
            "title": "nomDeLattribut : '&'"
          },
          {
            "title": "nomDeLattribut : '='",
            "isTrue": true
          },
          {
            "title": "nomDeLattribut : '#'"
          },
          {
            "title": "nomDeLattribut : '=nomDeLattribut'",
            "isTrue": true
          },
          {
            "title": "nomDeLattribut : '&nomDeLattribut'"
          },
          {
            "title": "nomDeLattribut : '@nomDeLattribut'"
          },
          {
            "title": "nomDeLattribut : '#nomDeLattribut'"
          }
        ]
      },
      {
        "id": 13,
        "level": "Expert",
        "title": "À quoi peut servir un intercepteur AngularJS",
        "responses": [
          {
            "title": "Tester si l’utilisateur est bien connecté avant d’envoyer la requête",
            "isTrue": true
          },
          {
            "title": "Intercepter toutes les requêtes http avant qu’elles partent vers le serveur",
            "isTrue": true
          },
          {
            "title": "Tester si l’utilisateur est français pour afficher la bonne langue"
          },
          {
            "title": "Intercepter toutes les requêtes http après qu’elles reviennent du le serveur",
            "isTrue": true
          },
          {
            "title": "Intercepter toutes les requêtes http en erreur avant qu’elles partent",
            "isTrue": true
          },
          {
            "title": "Tester si il y a des erreurs dans le $exceptionHandler"
          },
          {
            "title": "Tester si un login est unique pour un formulaire de création de compte"
          },
          {
            "title": "Intercepter toutes les requêtes http qui reviennent du serveur en erreur",
            "isTrue": true
          }
        ]
      },
      {
        "id": 14,
        "level": "Expert",
        "title": "Quelles sont les fonctions liées à l’envoi et la réception d’évènements AngularJS ",
        "responses": [
          {
            "title": "$emission"
          },
          {
            "title": "$broadcast",
            "isTrue": true
          },
          {
            "title": "$emit",
            "isTrue": true
          },
          {
            "title": "$off"
          },
          {
            "title": "$on",
            "isTrue": true
          },
          {
            "title": "$start"
          },
          {
            "title": "$end"
          },
          {
            "title": "$event"
          }
        ]
      },
      {
        "id": 15,
        "level": "Expert",
        "title": "Quelles sont les méthodes que l’on peut invoquer lors de l’utilisation d’une promise",
        "code": "var deferred  = $q.defer()",
        "responses": [
          {
            "title": "deferred.info()"
          },
          {
            "title": "deferred.terminate()"
          },
          {
            "title": "deferred.resolve()",
            "isTrue": true
          },
          {
            "title": "deferred.finish()"
          },
          {
            "title": "deferred.notify()",
            "isTrue": true
          },
          {
            "title": "deferred.error()"
          },
          {
            "title": "deferred.success()"
          },
          {
            "title": "deferred.reject()",
            "isTrue": true
          }
        ]
      }
    ]
  },
  {
    "id": 4,
    "name": "Java",
    "logo": "http://logodatabases.com/wp-content/uploads/2012/03/java-logo-large.png",
    "referent": {
      "firstName": "Adèle",
      "lastName": "Karam",
      "avatar": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAjoAAAAJDQ3NDQ2YWY0LTUyZmEtNDM2NC04NjRlLTQwMDMyMmNmNTNlZA.jpg"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Pour spécifier que la valeur d’une variable ne peut changer, on la déclare comme une constante avec le mot réservé ",
        "responses": [
          {
            "title": "finalize"
          },
          {
            "title": "const"
          },
          {
            "title": "define"
          },
          {
            "title": "final",
            "isTrue": true
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Quel mot clef indique qu’un attribut ne sera pas sérialisé",
        "responses": [
          {
            "title": "final"
          },
          {
            "title": "protected"
          },
          {
            "title": "transient",
            "isTrue": true
          },
          {
            "title": "serializable"
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "Cocher la ou les réponses correctes ",
        "responses": [
          {
            "title": "Une classe peut implémenter plusieurs interfaces mais doit étendre une seule classe",
            "isTrue": true
          },
          {
            "title": "Une classe peut implémenter plusieurs classes mais doit étendre une seule interface"
          },
          {
            "title": "Une classe peut implémenter plusieurs classes et peut étendre plusieurs interfaces"
          },
          {
            "title": "Une classe doit implémenter une seule interface et étendre une seule classe"
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Que donnera l’exécution du code suivant ",
        "code": "public class Moteur {\n\tprivate String reference;\n\tpublic String getReference() {return this.reference;}\n\tpublic void setReference(String pReference) {this.reference = pReference;}\n}\npublic class Voiture {\n\tprivate Moteur moteur;\n\tpublic Moteur getMoteur() {return this.moteur;}\n\tpublic void setMoteur(Moteur pMoteur) {this.moteur = pMoteur;}\n}\nVoiture uneVoiture = new Voiture();\nMoteur unMoteur = new Moteur();\nuneVoiture.setMoteur(unMoteur);\nunMoteur.setReference(\"AREF-1853-6959-8458-1242\");\nSystem.out.println(\"Référence: \"+uneVoiture.getMoteur().getReference());",
        "responses": [
          {
            "title": "Référence : null"
          },
          {
            "title": "Référence : AREF-1853-6959-8458-1242",
            "isTrue": true
          },
          {
            "title": "Référence : "
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Quel est le résultat de l'expression suivante, où obj1 et obj2 sont deux objets de même type ayant les mêmes valeurs d'attributs",
        "code": "(obj1==obj2)",
        "responses": [
          {
            "title": "true"
          },
          {
            "title": "false",
            "isTrue": true
          }
        ]
      },
      {
        "id": 6,
        "level": "Confirmé",
        "title": "Comment gérer la concurrence d'accès sur une méthode",
        "responses": [
          {
            "title": "Rajouter l’attribut abstracts"
          },
          {
            "title": "Rajouter l’attribut final"
          },
          {
            "title": "Rajouter l’attribut synchronized",
            "isTrue": true
          }
        ]
      },
      {
        "id": 7,
        "level": "Confirmé",
        "title": "D'où seront accessibles les deux attributs suivants ",
        "code": "protected int a;\nint b;",
        "responses": [
          {
            "title": "\"a\" sera accessible des classes dérivées (héritières) et des classes du même package. \"b\" ne sera accessible que des classes du même package",
            "isTrue": true
          },
          {
            "title": "\"a\" sera accessible des classes dérivées (héritières). \"b\" sera accessible depuis toutes les autres classes"
          },
          {
            "title": "\"a\" sera accessible des classes du même package. \"b\" sera accessible depuis toutes les autres classes"
          }
        ]
      },
      {
        "id": 8,
        "level": "Confirmé",
        "title": "Que faut-il faire pour qu'un objet soit \"transportable\" sous forme d'un flux ",
        "responses": [
          {
            "title": "Implémenter l'interface java.io.Serializable" ,
            "isTrue": true
          },
          {
            "title": "Implémenter l'interface java.io.DataOutput"
          },
          {
            "title": "Implémenter l'interface java.io.Externalizable"
          }
        ]
      },
      {
        "id": 9,
        "level": "Confirmé",
        "title": "Quelles sont les différences entre \"java.util.Arraylist\" et \"java.util.Set\"",
        "responses": [
          {
            "title": "ArrayList est une interface alors que Set est une classe"
          },
          {
            "title": "Set est une collection d'éléments non ordonnés qui accepte les doublons alors que ArrayList est une collection d’élément ordonnés qui n’accepte pas les doublons"
          },
          {
            "title": "Set est une collection d'éléments non ordonnés par défaut qui n'accepte pas les doublons alors que Arraylist hérite de l’interface List qui est une collection d'éléments ordonnés qui accepte les doublons",
            "isTrue": true
          }
        ]
      },
      {
        "id": 10,
        "level": "Confirmé",
        "title": "Pour garder l'ordre d'insertion des clés, on doit utiliser la classe",
        "responses": [
          {
            "title": "TreeTable"
          },
          {
            "title": "HashTable"
          },
          {
            "title": "LinkedHashMap",
            "isTrue": true
          },
          {
            "title": "LinkedHashSet"
          }
        ]
      },
      {
        "id": 11,
        "level": "Débutant",
        "title": "Quelle interface doit-on implémenter pour faciliter le tri dans une liste",
        "responses": [
          {
            "title": "Sortable"
          },
          {
            "title": "Comparable",
            "isTrue": true
          },
          {
            "title": "Comparator"
          }
        ]
      },
      {
        "id": 12,
        "level": "Confirmé",
        "title": "Pour empêcher une classe d’être étendue, on utilise la clause ",
        "responses": [
          {
            "title": "static"
          },
          {
            "title": "final",
            "isTrue": true
          },
          {
            "title": "volatile"
          },
          {
            "title": "abstract"
          }
        ]
      },
      {
        "id": 13,
        "level": "Confirmé",
        "title": "A quoi sert un Singleton en Java",
        "responses": [
          {
            "title": "Rendre la classe finale et non étendue"
          },
          {
            "title": "Impose à la classe de n’être instansiable qu’une seule fois",
            "isTrue": true
          },
          {
            "title": "Rendre la classe abstraite"
          }
        ]
      },
      {
        "id": 14,
        "level": "Confirmé",
        "title": "Quelle est l’utilité d’une classe abstraite ",
        "responses": [
          {
            "title": "Une classe qui possède au moins une méthode abstraite qui devra être implémentée dans chaque classe fille",
            "isTrue": true
          },
          {
            "title": "Une classe déclarée à l’intérieur d’une autre classe"
          },
          {
            "title": "Une classe qui ne peut pas être instanciée"
          }
        ]
      },
      {
        "id": 15,
        "level": "Confirmé",
        "title": "Que va afficher ce programme",
        "code": "public class A {\n}\npublic class B extends A{\n}\npublic class Test {\npublic static void main(String[] args) {\n\tB b = new B(); \n\tA a = new A(); \n\tSystem.out.print(b instanceof A); \n\tSystem.out.print(b instanceof B); \n\tSystem.out.print(a instanceof A); \n\tSystem.out.print(a instanceof B); \n}}",
        "responses": [
          {
            "title": "false false false false"
          },
          {
            "title": "false false false true"
          },
          {
            "title": "true true false true"
          },
          {
            "title": "true true true false",
            "isTrue": true
          }
        ]
      },
      {
        "id": 16,
        "level": "Confirmé",
        "title": "Un \"garbage collector\"",
        "responses": [
          {
            "title": "Alloue de la mémoire aux objets créés"
          },
          {
            "title": "Supprime les objets non référencés",
            "isTrue": true
          },
          {
            "title": "Supprime les objets non référencés"
          }
        ]
      },
      {
        "id": 17,
        "level": "Débutant",
        "title": "Avec Java 8 ",
        "responses": [
          {
            "title": "Une classe implémentant une interface doit fournir une implémentation pour chaque méthode"
          },
          {
            "title": "A chaque rajout d’une méthode à une interface, un refactoring est nécessaire"
          },
          {
            "title": "Les interfaces peuvent fournir une implémentation pour leur méthode, ils peuvent contenir des méthodes static",
            "isTrue": true
          }
        ]
      },
      {
        "id": 18,
        "level": "Débutant",
        "title": "Quelles fonctionnalités ont été rajoutées à partir de java 8 ",
        "responses": [
          {
            "title": "Lambda expression",
            "isTrue": true
          },
          {
            "title": "Compact profiles",
            "isTrue": true
          },
          {
            "title": "Stream API",
            "isTrue": true
          },
          {
            "title": "Only first two",
            "isTrue": true
          }
        ]
      },
      {
        "id": 19,
        "level": "Confirmé",
        "title": "Qu’est ce qu’une interface fonctionnelle ",
        "responses": [
          {
            "title": "Interface disposant d’une unique méthode abstraite",
            "isTrue": true
          },
          {
            "title": "Interface disposant de plusieurs méthodes et parmis elles une seule méthode static"
          },
          {
            "title": "Une interface possédant une seule méthode étant une redéfinition d'une méthode de la classe Object"
          }
        ]
      },
      {
        "id": 20,
        "level": "Débutant",
        "title": "L’annotation @FunctionalInterface est utilisé dans le cas",
        "responses": [
          {
            "title": "La classe implémentant une interface fonctionnelle"
          },
          {
            "title": "L’interface fonctionnelle",
            "isTrue": true
          },
          {
            "title": "Une classe d’énumération"
          }
        ]
      },
      {
        "id": 21,
        "level": "Confirmé",
        "title": "Quel est la signification de l’instruction suivante ",
        "code": "(Student s) -> s.getAge() > 20",
        "responses": [
          {
            "title": "Prend un paramètre et retourne un entier"
          },
          {
            "title": "rend un paramètre et retourne un boolean",
            "isTrue": true
          },
          {
            "title": "rend un paramètre et retourne un objet Student"
          }
        ]
      },
      {
        "id": 22,
        "level": "Débutant",
        "title": "Est ce que ses 2 instructions sont identiques",
        "code": "Function<Integer, String> toString = n -> String.valueOf(n);\nFunction<Integer, String> toString = String::valueOf;",
        "responses": [
          {
            "title": "Vrai",
            "isTrue": true
          },
          {
            "title": "Faux"
          }
        ]
      },
      {
        "id": 23,
        "level": "Expert",
        "title": "Api Streams, permet",
        "responses": [
          {
            "title": "De manipuler des collections de données de manière déclarative, d’enchaîner les traitements et de charger les données à la demande",
            "isTrue": true
          },
          {
            "title": "Le chargement de toutes les données en mémoire"
          },
          {
            "title": "D'encapsuler des traitements métiers, de stocker et d’accéder à des données"
          }
        ]
      }
    ]
  },
  {
    "id": 5,
    "name": "Spring",
    "logo": "http://www.unixstickers.com/image/cache/data/stickers/spring/xspring-leaf.sh-340x340.png.pagespeed.ic.K5PrZIokfE.png",
    "referent": {
      "firstName": "Adèle",
      "lastName": "Karam",
      "avatar": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAjoAAAAJDQ3NDQ2YWY0LTUyZmEtNDM2NC04NjRlLTQwMDMyMmNmNTNlZA.jpg"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Pour qu'un attribut soit instancié avec un bean on doit utiliser l'annotation",
        "responses": [
          {
            "title": "@Authowired"
          },
          {
            "title": "@Value"
          },
          {
            "title": "@Controller"
          },
          {
            "title": "@Resource",
            "isTrue": true
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Quel est le scope par défaut d'un bean Spring",
        "responses": [
          {
            "title": "Session"
          },
          {
            "title": "Singleton"
          },
          {
            "title": "Prototype"
          },
          {
            "title": "Spring",
            "isTrue": true
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "Spring facilite le développement des DAO de la couche de persistance en utilisant JDBC, JPA, JDO ou une solution open source comme Hibernate, iBatis, et une hiérarchie d'exceptions ",
        "responses": [
          {
            "title": "Vrai",
            "isTrue": true
          },
          {
            "title": "Faux"
          }
        ]
      },
      {
        "id": 4,
        "level": "Confirmé",
        "title": "Dans une application Web, la présence d'un Listener de type ContextLoaderListener dans le fichier web.xml comme suit signifie",
        "code": "<context-param>\n\t<param-name>contextConfigLocation</param-name>\n\t<param-value>/WEB-INF/daoContext.xml /WEB-INF/servicesContext.xml /WEB-INF/applicationContext.xml</param-value>\n</context-param>\n<listener>\n\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>",
        "responses": [
          {
            "title": "Que ContextLoaderListener est utilisée pour changer le ou les fichiers de configuration de l’application web définis dans ContextConfigLocation et que l’application Web est informée de tout changement dans le ou les fichiers de configuration Spring",
            "isTrue": true
          },
          {
            "title": "Que Spring va instancier un WebApplicationContext sur la base par défaut du fichier WEB-INF/applicationContext.xml"
          },
          {
            "title": "Qu’un objet de type WebApplicationContext est injecté dans toute servlet page JSP de l’application web."
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "La balise @Resource ",
        "responses": [
          {
            "title": "Permet un autowiring byName ou byType sans intervenir dans le fichier de configuration (annotation-config excepté)",
            "isTrue": true
          },
          {
            "title": "Complète les balises @autowired et @inject qui ne sauraient fonctionner seules"
          },
          {
            "title": "De faire instancier par Spring des classes par simple présence de cette annotation dans le code"
          }
        ]
      },
      {
        "id": 6,
        "level": "Débutant",
        "title": "Lorsque deux demandes sont faites",
        "code": "<bean id=\"monBean1\" class=\"com.developpez.spring.MonBean1\" scope=\"singleton\"/></bean>\n<bean id=\"monBean2\" class=\"com.developpez.spring.MonBean2\" scope=\"prototype\"/></bean>",
        "responses": [
          {
            "title": "C'est la même instance de l'objet monBean1 qui est fournie par le BeanFactory/ApplicationContext. Alors que mon monBean2 est instancié à chaque demande",
            "isTrue": true
          },
          {
            "title": "C'est la même instance de l’objet monBean2 qui est fournie par le Beanfactory/ApplicationContext. Alors que monBean1 est instancié à chaque demande."
          },
          {
            "title": "monBean1 et monBean2 sont instanciés pour chaque demande"
          }
        ]
      },
      {
        "id": 7,
        "level": "Confirmé",
        "title": "Avec Spring MVC, vous devez créer vous-même vos Contolleurs (contrairement à Struts, ou il n’ya qu’un controleur : l’actionServlet.",
        "responses": [
          {
            "title": "Vrai",
            "isTrue": true
          },
          {
            "title": "Faux"
          }
        ]
      },
      {
        "id": 8,
        "level": "Confirmé",
        "title": "Quelle classe implémente le contexte Spring",
        "responses": [
          {
            "title": "classPathXMLApplicationContext"
          },
          {
            "title": "DefautListableBeanFactory"
          },
          {
            "title": "BeanXMLFactory"
          },
          {
            "title": "RessourceLoaderContext",
            "isTrue": true
          }
        ]
      },
      {
        "id": 9,
        "level": "Confirmé",
        "title": "Pour gérer les transactions de base de données, il faut ",
        "responses": [
          {
            "title": "Un transaction manager",
            "isTrue": true
          },
          {
            "title": "Utiliser l’annotation @Dbtransaction"
          }
        ]
      },
      {
        "id": 10,
        "level": "Confirmé",
        "title": "Quels patterns Spring Core permet-il de mettre en place",
        "responses": [
          {
            "title": "IOC",
            "isTrue": true
          },
          {
            "title": "MVC"
          },
          {
            "title": "Dependency injection"
          },
          {
            "title": "Service locator"
          }
        ]
      },
      {
        "id": 11,
        "level": "Débutant",
        "title": "Quelles sont les différentes manières d’injecter un bean",
        "responses": [
          {
            "title": "Avec le tag <property>",
            "isTrue": true
          },
          {
            "title": "Avec l’annotation @Injector"
          },
          {
            "title": "Avec l’annotation @Autowired",
            "isTrue": true
          },
          {
            "title": "Avec le tag <constructor>"
          }
        ]
      },
      {
        "id": 12,
        "level": "Confirmé",
        "title": "Comment intégrer Spring et Hibernate",
        "responses": [
          {
            "title": "En déclarant une session et en l’injectant aux DAO"
          },
          {
            "title": "En déclarant une session factory et en l’injectant aux DAO",
            "isTrue": true
          }
        ]
      },
      {
        "id": 13,
        "level": "Confirmé",
        "title": "Le mécanisme de transaction est implémenté",
        "responses": [
          {
            "title": "Par template pattern"
          },
          {
            "title": "Par AOP",
            "isTrue": true
          }
        ]
      },
      {
        "id": 14,
        "level": "Confirmé",
        "title": "A quoi sert un serveur Apache, a quoi est-il dédié dans une architecture web",
        "responses": [
          {
            "title": "Apache permet d'ouvrir les connexions http, de servir les pages statiques (html et images), de décharger le serveur d'application",
            "isTrue": true
          },
          {
            "title": "Apache est un serveur web pour exécuter les parties servlets et JSP des applications déployées sur le serveur"
          }
        ]
      }
    ]
  },
  {
    "id": 6,
    "name": "Hibernate",
    "logo": "https://uploads.toptal.io/blog/category/logo/32/hibernate.png",
    "referent": {
      "firstName": "Adèle",
      "lastName": "Karam",
      "avatar": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAjoAAAAJDQ3NDQ2YWY0LTUyZmEtNDM2NC04NjRlLTQwMDMyMmNmNTNlZA.jpg"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Lesquels sont un Framework ou une norme de mapping objet relationnel",
        "responses": [
          {
            "title": "Hibernate",
            "isTrue": true
          },
          {
            "title": "JPA",
            "isTrue": true
          },
          {
            "title": "Spring"
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Dans Hibernate, de quelles manières peut être réalisé le mapping",
        "responses": [
          {
            "title": "Avec un fichier xml",
            "isTrue": true
          },
          {
            "title": "Avec un fichier properties"
          },
          {
            "title": "Par annotation",
            "isTrue": true
          }
        ]
      },
      {
        "id": 3,
        "level": "Confirmé",
        "title": "Dans Hibernate, comment réattacher un objet",
        "responses": [
          {
            "title": "Avec la méthode attach"
          },
          {
            "title": "Avec la méthode update de la session",
            "isTrue": true
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Dans Hibernate, comment crée-t-on une session",
        "responses": [
          {
            "title": "A partir d’un session bean",
            "isTrue": true
          },
          {
            "title": "A partir d’une session factory"
          },
          {
            "title": "A partir d’un session manager"
          },
          {
            "title": "A partir d’un session builder"
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Qu'est-ce qu'une session Hibernate",
        "responses": [
          {
            "title": "Juste une connexion à la base de données",
            "isTrue": true
          },
          {
            "title": "Un cache d’objet"
          },
          {
            "title": "Ce qui effectue les opérations dans la base de données"
          }
        ]
      },
      {
        "id": 6,
        "level": "Confirmé",
        "title": "Dans Hibernate, si les attributs d’un objet attaché à la session sont modifiés, est-il nécessaire d'appeler la méthode update de la session",
        "responses": [
          {
            "title": "Oui"
          },
          {
            "title": "Non",
            "isTrue": true
          }
        ]
      }
    ]
  },
  {
    "id": 7,
    "name": "PHP",
    "logo": "https://blog.seboss666.info/wp-content/uploads/2014/11/fpmphp-logo.png",
    "referent": {
      "firstName": "Franck",
      "lastName": "Fernandez",
      "avatar": "https://sqli468.sharepoint.com/sites/collaboratifs/Toulouse%20Comit%C3%A9%20Technique/SiteAssets/team-members/Frank.png"
    },
    "questions": [
      {
        "id": 1,
        "level": "Débutant",
        "title": "Comment vérifier la syntaxe d'une adresse e-mail contenue dans la variable $email ?",
        "responses": [
          {
            "code": "strpos($email,\"*@*.*\")"
          },
          {
            "code": "ereg($email,\"[:alpha:]*@[:alpha:]*\\.[:alpha:]*\")"
          },
          {
            "code": "preg_match(\"/^(\\w|-)+@((\\w|-)+\\.)+[a-z]{2,6}$/i\",$email)",
            "isTrue": true
          }
        ]
      },
      {
        "id": 2,
        "level": "Débutant",
        "title": "Par défaut, dans quel ordre de priorité sont affectées les variables envoyées par HTTP ?",
        "responses": [
          {
            "title": "get, cookie, post"
          },
          {
            "title": "post, get, cookie"
          },
          {
            "title": "get, post, cookie",
            "isTrue": true
          },
          {
            "title": "post,cookie, get"
          }
        ]
      },
      {
        "id": 3,
        "level": "Débutant",
        "title": "De quelle façon autorise-t-on l'accès à un fichier. - en lecture/écriture/exécution pour le propriétaire, - en lecture/écriture pour le groupe, - en lecture pour les autres ",
        "responses": [
          {
            "code": "chmod('fichier',0764);",
            "isTrue": true
          },
          {
            "code": "chmod('fichier','u+wrx g+rw o+r');"
          },
          {
            "code": "chown('fichier','0777');"
          }
        ]
      },
      {
        "id": 4,
        "level": "Débutant",
        "title": "Comment vérifie-t-on l'égalité de deux variables : $a et $b ?",
        "responses": [
          {
            "code": "$a = $b"
          },
          {
            "code": "$a == $b",
            "isTrue": true
          },
          {
            "code": "$a != $b"
          },
          {
            "code": "if($a,$b)"
          }
        ]
      },
      {
        "id": 5,
        "level": "Débutant",
        "title": "Comment accède-t-on au 1er élément chaton dans le tableau suivant : ",
        "code": "$tableau = Array('chaton' , 'ornithorynque', 'dauphin');",
        "responses": [
          {
            "code": "$tableau[1]"
          },
          {
            "code": "$tableau[0]",
            "isTrue": true
          },
          {
            "code": "$tableau{0}"
          },
          {
            "code": "$tableau.get(1)"
          }
        ]
      },
      {
        "id": 6,
        "level": "Débutant",
        "title": "Quelle est l'utilité de l'opérateur || ?",
        "responses": [
          {
            "title": "Il sert à vérifier que toutes les conditions sont réalisées"
          },
          {
            "title": "Il sert à vérifier qu'une, et une seule, des conditions est réalisée"
          },
          {
            "title": "Il sert à vérifier qu'une, au moins, des conditions est réalisée",
            "isTrue": true
          }
        ]
      },
      {
        "id": 7,
        "level": "Intermédiaire",
        "title": "Sachant que $a = 4. Quelle instruction affiche : 4 = quatre ?",
        "responses": [
          {
            "code": "echo '$a = quatre';"
          },
          {
            "code": "echo '$a = 2+2';"
          },
          {
            "code": "echo \"$a = quatre\";",
            "isTrue": true
          }
        ]
      },
      {
        "id": 8,
        "level": "Intermédiaire",
        "title": "Dans le cas d'envoi d'informations plus ou moins sensibles par formulaire, quelle méthode utilisera-t-on de préférence ?",
        "responses": [
          {
            "title": "get"
          },
          {
            "title": "mailto"
          },
          {
            "title": "post",
            "isTrue": true
          }
        ]
      },
      {
        "id": 9,
        "level": "Expert",
        "title": "La boucle : ",
        "code": "for ($i=0 ; $i<=3 ; $i++ ) { echo $i; }",
        "responses": [
          {
            "title": "Sera éxécutée 2 fois"
          },
          {
            "title": "Sera éxécutée 3 fois"
          },
          {
            "title": "Sera éxécutée 4 fois",
            "isTrue": true
          }
        ]
      }
    ]
  }
]